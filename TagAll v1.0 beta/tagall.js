//Lista de nomes abaixo do nome do grupo
const listaNomes = "ggj6brxn gfz4du6o r7fjleex lhj4utae le5p0ye3 _11JPr selectable-text copyable-text";
//Lista de pessoas na caixa de seleção do @
const listaPessoas = "i5tg98hk f9ovudaz przvwfww gx1rr48f shdiholb phqmzxqs gtscxtjd ajgl1lbb thr4l2wc cc8mgx9x eta5aym1 d9802myq e4xiuwjv ln8gz9je";
//Class do Mic e div acima
const classMic = "_2xy_p _3XKXx";
const classDiv = "_1VZX7";
//Class do Chat Aberto
const classChat = "g0rxnol2";
//Arroba em HTML
const arrobaHtml = '<button data-testid="arroba" class="svlsagor" aria-label="Marcar todos" data-tab="11"><span data-testid="ptt" data-icon="ptt" class=""><svg viewBox="0 0 24 20" height="24" width="24" preserveAspectRatio="xMidYMid meet" class="" version="1.1" x="0px" y="0px" enable-background="new 0 0 24 24" xml:space="preserve"><path fill="black" fill-opacity="1" d="M19.4844 10.1883 19.7839 10.2048 19.7839 10.2032 19.4844 10.1883ZM18.1356 13.9715 18.361 14.1695 18.361 14.1695 18.1356 13.9715ZM15.696 2.5501 15.5547 2.8148 15.5547 2.8148 15.696 2.5501ZM6.1892 2.6604 6.0447 2.3975 6.0447 2.3975 6.1892 2.6604ZM2.8613 5.9161 3.1207 6.0668 3.1207 6.0668 2.8613 5.9161ZM1.5126 10.639 1.213 10.6241 1.2129 10.6262 1.5126 10.639ZM2.4227 15.482 2.1554 15.618 2.1555 15.6181 2.4227 15.482ZM5.4162 18.469 5.5539 18.2025 5.5539 18.2025 5.4162 18.469ZM12.4832 19.2651 12.4224 18.9713 12.4224 18.9713 12.4832 19.2651ZM13.7344 18.9077 13.6249 18.6284 13.6249 18.6284 13.7344 18.9077ZM14.102 18.0634 14.388 17.9727 14.388 17.9727 14.102 18.0634ZM13.1548 17.6063 13.2445 17.8925 13.2445 17.8925 13.1548 17.6063ZM12.1652 17.8506 12.1089 17.5558 12.1089 17.5558 12.1652 17.8506ZM3.4315 10.639 3.7311 10.6561 3.7312 10.6521 3.4315 10.639ZM4.5061 6.5874 4.2431 6.4431 4.2431 6.4431 4.5061 6.5874ZM7.1432 3.8687 6.9955 3.6076 6.9955 3.6076 7.1432 3.8687ZM17.7738 10.2267 17.4742 10.2109 17.4741 10.2149 17.7738 10.2267ZM16.9898 12.9454 16.7422 12.776 16.7422 12.776 16.9898 12.9454ZM13.9032 12.0967 14.2014 12.1294 14.2015 12.1282 13.9032 12.0967ZM14.2774 8.5532 14.5757 8.5847 14.5757 8.5847 14.2774 8.5532ZM12.8121 5.8634 12.8943 5.5748 12.8943 5.5748 12.8121 5.8634ZM6.2715 11.109 5.9733 11.0755 5.973 11.0784 6.2715 11.109ZM6.902 14.1873 7.1455 14.0121 7.1455 14.0121 6.902 14.1873ZM12.1816 13.8804 12.4549 13.7566 12.2484 13.3006 11.9436 13.6978 12.1816 13.8804ZM8.4205 11.109 8.7187 11.1416 8.7188 11.1408 8.4205 11.109ZM9.3964 8.1506 9.1582 7.9682 9.1582 7.9682 9.3964 8.1506ZM8.6837 13.0893 8.4264 13.2437 8.4264 13.2437 8.6837 13.0893ZM11.9512 12.0584 12.2285 12.173 12.2451 12.1328 12.2496 12.0896 11.9512 12.0584ZM12.3322 8.4086 12.6306 8.4397 12.6306 8.4397 12.3322 8.4086ZM19.1848 10.1719C19.0997 11.7235 18.6655 12.9137 17.9103 13.7735L18.361 14.1695C19.2287 13.1817 19.6936 11.8498 19.7839 10.2048L19.1848 10.1719ZM18.3712 5.704C18.9948 6.9633 19.2705 8.4496 19.1847 10.1734L19.7839 10.2032C19.8738 8.398 19.5864 6.806 18.9089 5.4377L18.3712 5.704ZM15.5547 2.8148C16.8124 3.4858 17.7488 4.4471 18.3712 5.704L18.9089 5.4377C18.2301 4.067 17.2036 3.0145 15.8371 2.2854L15.5547 2.8148ZM10.9974 1.8C12.7793 1.8 14.2947 2.1425 15.5547 2.8148L15.8371 2.2854C14.4728 1.5575 12.856 1.2 10.9974 1.2V1.8ZM6.3338 2.9233C7.6916 2.1768 9.2435 1.8 10.9974 1.8V1.2C9.1548 1.2 7.5013 1.5967 6.0447 2.3975L6.3338 2.9233ZM3.1207 6.0668C3.9049 4.7167 4.9746 3.6704 6.3338 2.9233L6.0447 2.3975C4.5894 3.1975 3.4406 4.3216 2.6019 5.7654L3.1207 6.0668ZM1.8123 10.654C1.8978 8.9459 2.3354 7.4188 3.1207 6.0668L2.6019 5.7654C1.7644 7.2072 1.3029 8.8287 1.213 10.6241L1.8123 10.654ZM2.6901 15.3457C2.0314 14.0527 1.7336 12.4922 1.8124 10.6519L1.2129 10.6262C1.1308 12.5451 1.4398 14.2131 2.1554 15.618L2.6901 15.3457ZM5.5539 18.2025C4.2778 17.5434 3.326 16.5925 2.69 15.3456L2.1555 15.6181C2.8499 16.9797 3.8937 18.0203 5.2785 18.7356L5.5539 18.2025ZM10.197 19.2C8.3768 19.2 6.8327 18.8633 5.5539 18.2025L5.2785 18.7356C6.6605 19.4496 8.3036 19.8 10.197 19.8V19.2ZM12.4224 18.9713C11.6856 19.1238 10.944 19.2 10.197 19.2V19.8C10.9851 19.8 11.7675 19.7196 12.544 19.5588L12.4224 18.9713ZM13.6249 18.6284C13.2897 18.7598 12.8896 18.8745 12.4224 18.9713L12.544 19.5588C13.0356 19.4571 13.4697 19.3336 13.8439 19.1869L13.6249 18.6284ZM13.816 18.1541C13.8843 18.3695 13.7864 18.5649 13.6249 18.6284L13.8439 19.1869C14.3471 18.9896 14.5355 18.438 14.388 17.9727L13.816 18.1541ZM13.2445 17.8925C13.4976 17.8131 13.7501 17.946 13.816 18.1541L14.388 17.9727C14.2081 17.4057 13.5878 17.1561 13.065 17.3199L13.2445 17.8925ZM12.2215 18.1452C12.5899 18.0748 12.931 17.9907 13.2445 17.8925L13.065 17.3199C12.7766 17.4104 12.4581 17.4891 12.1089 17.5558L12.2215 18.1452ZM10.2408 18.3423C10.8757 18.3423 11.5361 18.2763 12.2215 18.1452L12.1089 17.5558C11.4566 17.6806 10.834 17.7423 10.2408 17.7423V18.3423ZM6.2521 17.4321C7.3558 18.0441 8.6898 18.3423 10.2408 18.3423V17.7423C8.7655 17.7423 7.5374 17.4588 6.5431 16.9074L6.2521 17.4321ZM3.789 14.7479C4.323 15.9207 5.1456 16.8183 6.2521 17.4321L6.5431 16.9074C5.5516 16.3575 4.8171 15.5579 4.335 14.4993L3.789 14.7479ZM3.132 10.622C3.0422 12.199 3.2562 13.578 3.789 14.7479L4.335 14.4993C3.8517 13.4379 3.6454 12.1606 3.731 10.6561L3.132 10.622ZM4.2431 6.4431C3.5678 7.674 3.1993 9.0705 3.1318 10.626L3.7312 10.6521C3.7953 9.1772 4.1432 7.8726 4.7691 6.7317L4.2431 6.4431ZM6.9955 3.6076C5.8363 4.2633 4.9187 5.2115 4.2431 6.4431L4.7691 6.7317C5.3947 5.5914 6.2351 4.7271 7.2909 4.1298L6.9955 3.6076ZM10.9536 2.6289C9.4756 2.6289 8.1535 2.9524 6.9955 3.6076L7.2909 4.1298C8.3479 3.5318 9.5659 3.2289 10.9536 3.2289V2.6289ZM16.4308 4.6041C15.1898 3.2702 13.3445 2.6289 10.9536 2.6289V3.2289C13.2411 3.2289 14.9009 3.8406 15.9916 5.0128L16.4308 4.6041ZM18.0733 10.2425C18.2003 7.8339 17.6706 5.9365 16.4308 4.6041L15.9916 5.0128C17.0838 6.1866 17.5959 7.9013 17.4742 10.2109L18.0733 10.2425ZM17.2374 13.1148C17.7566 12.3557 18.0282 11.39 18.0737 10.2385L17.4741 10.2149C17.4318 11.2882 17.1807 12.135 16.7422 12.776L17.2374 13.1148ZM15.1532 14.2955C16.0127 14.2955 16.7116 13.8835 17.2374 13.1148L16.7422 12.776C16.3104 13.4074 15.785 13.6955 15.1532 13.6955V14.2955ZM13.6049 12.064C13.5326 12.723 13.5956 13.2827 13.8609 13.6857 14.1404 14.1102 14.5983 14.2955 15.1532 14.2955V13.6955C14.7358 13.6955 14.4993 13.5642 14.3621 13.3558 14.2107 13.1259 14.1348 12.7363 14.2014 12.1294L13.6049 12.064ZM13.979 8.5217 13.6048 12.0652 14.2015 12.1282 14.5757 8.5847 13.979 8.5217ZM12.73 6.1519C13.631 6.4085 14.092 7.4517 13.979 8.5217L14.5757 8.5847C14.7036 7.3739 14.199 5.9463 12.8943 5.5748L12.73 6.1519ZM11.1838 5.962C11.7768 5.962 12.2909 6.0269 12.73 6.1519L12.8943 5.5748C12.3903 5.4313 11.819 5.362 11.1838 5.362V5.962ZM9.0705 6.6002C9.7376 6.1723 10.4402 5.962 11.1838 5.962V5.362C10.3192 5.362 9.505 5.6087 8.7466 6.0951L9.0705 6.6002ZM7.4056 8.435C7.8489 7.6352 8.4048 7.0271 9.0705 6.6002L8.7466 6.0951C7.9868 6.5824 7.3659 7.2689 6.8808 8.1441L7.4056 8.435ZM6.5696 11.1424C6.6826 10.1359 6.9623 9.2347 7.4056 8.435L6.8808 8.1441C6.3957 9.0194 6.0943 9.9978 5.9733 11.0755L6.5696 11.1424ZM7.1455 14.0121C6.65 13.3233 6.443 12.3785 6.5699 11.1395L5.973 11.0784C5.8367 12.4095 6.0501 13.5169 6.6584 14.3625L7.1455 14.0121ZM9.3307 15.0381C8.3456 15.0381 7.6331 14.6899 7.1455 14.0121L6.6584 14.3625C7.2746 15.219 8.1813 15.6381 9.3307 15.6381V15.0381ZM10.7498 14.7045C10.2968 14.9275 9.8249 15.0381 9.3307 15.0381V15.6381C9.9184 15.6381 10.4808 15.5056 11.0148 15.2427L10.7498 14.7045ZM11.9436 13.6978C11.5956 14.1513 11.1974 14.4841 10.7498 14.7045L11.0148 15.2427C11.5541 14.9773 12.022 14.5813 12.4197 14.063L11.9436 13.6978ZM14.8352 15.0572C14.2095 15.0572 13.7113 14.9407 13.3254 14.7259 12.9432 14.5132 12.6532 14.1945 12.4549 13.7566L11.9084 14.0042C12.1559 14.5508 12.5312 14.9706 13.0336 15.2502 13.5321 15.5275 14.1378 15.6572 14.8352 15.6572V15.0572ZM17.9103 13.7735C17.1636 14.6237 16.1502 15.0572 14.8352 15.0572V15.6572C16.298 15.6572 17.4849 15.1669 18.361 14.1695L17.9103 13.7735ZM8.7188 11.1408C8.8548 9.8634 9.1701 8.9394 9.6346 8.333L9.1582 7.9682C8.5992 8.698 8.2639 9.7463 8.1222 11.0773L8.7188 11.1408ZM8.9409 12.935C8.72 12.5669 8.6265 11.9854 8.7187 11.1416L8.1223 11.0764C8.0244 11.9716 8.1063 12.7103 8.4264 13.2437L8.9409 12.935ZM9.9775 13.4654C9.4749 13.4654 9.1494 13.2825 8.9409 12.935L8.4264 13.2437C8.7588 13.7976 9.296 14.0654 9.9775 14.0654V13.4654ZM10.8996 13.0831C10.5932 13.3483 10.2879 13.4654 9.9775 13.4654V14.0654C10.4567 14.0654 10.897 13.8789 11.2923 13.5367L10.8996 13.0831ZM11.674 11.9439C11.4684 12.4413 11.2078 12.8164 10.8996 13.0831L11.2923 13.5367C11.6859 13.1961 11.9955 12.7368 12.2285 12.173L11.674 11.9439ZM12.0338 8.3775 11.6529 12.0273 12.2496 12.0896 12.6306 8.4397 12.0338 8.3775ZM11.3811 7.4485C11.5871 7.4485 11.755 7.5476 11.8735 7.7155 11.9956 7.8883 12.0597 8.1297 12.0338 8.3775L12.6306 8.4397C12.6704 8.0579 12.5754 7.6693 12.3637 7.3694 12.1485 7.0647 11.808 6.8485 11.3811 6.8485V7.4485ZM9.6346 8.333C10.092 7.7358 10.667 7.4485 11.3811 7.4485V6.8485C10.4723 6.8485 9.7242 7.2292 9.1582 7.9682L9.6346 8.333Z" stroke="currentColor" stroke-width="1.1"></path></svg></span></button>'

//global
var stnum = 1;
var gtam = 0;
var garrayNomes = [];

async function escreverTexto(nu){
	//i = 0;
	main = document.querySelector("#main"),
	textarea = main.querySelector(`div[contenteditable="true"]`)
	if(!textarea) throw new Error("Não há uma conversa aberta")

	// Cria o evento para pressionar a seta para baixo e cima
    const setaBaixoEvent = new KeyboardEvent("keydown", { key: "ArrowDown", code: "ArrowDown", which: 40, keyCode: 40, bubbles: true });
	const setaCimaEvent = new KeyboardEvent("keydown", { key: "ArrowUp", code: "ArrowUp", which: 38, keyCode: 38, bubbles: true });

    // Cria o evento para pressionar o enter
    const tabEvent = new KeyboardEvent("keydown", { key: "Tab", code: "Tab", which: 9, keyCode: 9, bubbles: true });

	textarea.focus();
	if(nu==1){
		textarea.dispatchEvent(setaCimaEvent);
		textarea.dispatchEvent(new Event('change', {bubbles: true}));
	} else {
		textarea.dispatchEvent(tabEvent);
		document.execCommand('insertText', false, '@');
		textarea.dispatchEvent(new Event('change', {bubbles: true}));
		textarea.dispatchEvent(setaBaixoEvent);
	}
}

function contarNomes(stringNomes) {
  // Remove espaços em branco antes e depois da string
  stringNomes = stringNomes.trim();
  // Divide a string em um array separado por vírgulas
  arrayNomes = stringNomes.split(", "); 
  garrayNomes = arrayNomes;
  // Retorna a quantidade de nomes no array
  return arrayNomes.length;
}

function esperarEClicar() {
  const pessoas = document.getElementsByClassName(listaPessoas);
  
  // Verificar se o elemento existe
  if (!pessoas[0]) {
    // Se o elemento ainda não existir, aguardar 100ms e tentar novamente
    setTimeout(esperarEClicar, 100);
    return;
  }
  nomes = document.getElementsByClassName(listaNomes);
  tam = contarNomes(nomes[0].outerText);
  gtam = tam;
  stnum = 0;
  
  i = 0;
  j = 0;
  //tam = pessoas.length;
  while(i<(tam)){
  	setTimeout(function() {
    	escreverTexto(1);
    	stnum++;
    }, 100+i);
  	i++;
  }

  function startMarcar(){
  	if(stnum == gtam) {
		while(j<((tam-1)*2)-1){
			setTimeout(function() {
		   		escreverTexto(0);
			}, 100+j*75);
		  	j++;
		}
	}
	else {
	    setTimeout(startMarcar, 100);
	    return;
  	}
  }
  startMarcar();
}

function criarBotao() {
  	

      if(!document.getElementsByClassName("botaoArroba")[0]){
      botaoArroba = document.createElement("div");
	  botaoArroba.setAttribute("class", classMic+" botaoArroba");
	  botaoArroba.innerHTML = arrobaHtml;
	  //botaoArroba.onclick = esperarEClicar;
	  botaoArroba.onclick = function() {
	  	main = document.querySelector("#main");
		textarea = main.querySelector(`div[contenteditable="true"]`);
		textarea.focus();
		document.execCommand('insertText', false, '@');
		textarea.dispatchEvent(new Event('change', {bubbles: true}));
		esperarEClicar();
	  }
	  document.getElementsByClassName(classDiv)[0].appendChild(botaoArroba);
	}
    
}

botabotao = setInterval(criarBotao, 500);
//const chatAberto = document.querySelector("div."+classChat+" div[aria-selected='true']");



